[tox]
minversion = 3.7
isolated_build = true
skip_missing_interpreters = true
envlist =
    fix_lint
    py27
    py34
    py35
    py36
    py37
    py38
    pypy
    pypy3
    package_description
    docs
    coverage

[testenv]
description = run test suite under {basepython}
setenv = PIP_DISABLE_VERSION_CHECK = 1
         COVERAGE_FILE = {env:COVERAGE_FILE:{toxworkdir}/.coverage.{envname}}
passenv =
    http_proxy
    https_proxy
    no_proxy
    SSL_CERT_FILE
    PYTEST_*
    HOME
deps =
    pip >= 19.1.1
extras = testing
commands = pytest \
           --cov "{envsitepackagesdir}/{{cookiecutter.pkg_name}}" \
           --cov-config "{toxinidir}/tox.ini" \
           --junitxml {toxworkdir}/junit.{envname}.xml \
           -n={env:PYTEST_XDIST_PROC_NR:auto} \
           {posargs:tests}


[pytest]
addopts = -ra --showlocals

[testenv:coverage]
description = [run locally after tests]: combine coverage data and create report;
              generates a diff coverage against origin/master (can be changed by setting DIFF_AGAINST env var)
deps = {[testenv]deps}
       coverage >= 4.4.1, < 5
       diff_cover
skip_install = True
passenv =
    {[testenv]passenv}
    DIFF_AGAINST
setenv = COVERAGE_FILE={toxworkdir}/.coverage
commands = coverage combine
           coverage report -m
           coverage xml -o {toxworkdir}/coverage.xml
           coverage html -d {toxworkdir}/htmlcov
           diff-cover --compare-branch {env:DIFF_AGAINST:origin/master} {toxworkdir}/coverage.xml
depends =
    py27
    py34
    py35
    py36
    py37
    py38
    pypy
    pypy3
parallel_show_output = True

[coverage:run]
branch = true
parallel = true
[coverage:report]
skip_covered = False
show_missing = True
[coverage:paths]
source = src/{{cookiecutter.pkg_name}}
         */.tox/*/lib/python*/site-packages/{{cookiecutter.pkg_name}}
         */.tox/pypy*/site-packages/{{cookiecutter.pkg_name}}
         */.tox\*\Lib\site-packages\{{cookiecutter.pkg_name}}
         */src/{{cookiecutter.pkg_name}}
         *\src\{{cookiecutter.pkg_name}}

[testenv:fix_lint]
extras =
description = format the code base to adhere to our styles, and complain about what we cannot do automatically
passenv =
    PROGRAMDATA
deps =
    {[testenv]deps}
    pre-commit >= 1.14.4, < 2
skip_install = True
commands = pre-commit run --all-files --show-diff-on-failure
           python -c 'import pathlib; print("hint: run \{\} install to add checks as pre-commit hook".format(pathlib.Path(r"{envdir}") / "bin" / "pre-commit"))'

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
line_length = 99
known_first_party = {{cookiecutter.pkg_name}},tests
known_third_party = pluggy,setuptools,sphinx_rtd_theme,tox

[testenv:docs]
description = invoke sphinx-build to build the HTML docs
extras = docs
commands =
    {%- if cookiecutter.license == "sphinx" -%}
    sphinx-build -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out" --color -W -bhtml {posargs}
    {%- elif cookiecutter.license == "mkdocs" -%}
    mkdocs build -d {toxworkdir}/docs_out {posargs}
    {%- endif -%}
    python -c 'import pathlib; print("documentation available under file://\{0\}".format(pathlib.Path(r"{toxworkdir}") / "docs_out" / "index.html"))'

[testenv:package_description]
description = check that the long description is valid
deps =
    {[testenv]deps}
    twine >= 1.12.1
   readme-renderer[md] >= 24.0
skip_install = true
extras =
commands = pip wheel -w {envtmpdir}/build --no-deps .
           twine check {envtmpdir}/build/*

[testenv:dev]
description = create dev environment
develop = true
extras = testing, docs
